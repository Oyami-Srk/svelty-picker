import{s as a,f as l,g as s,x as u,i as m,r as o,d as p}from"./scheduler.6381a9b9.js";import{S as n,i,b,d as f,m as h,a as g,t as y,e as _}from"./index.cf31950d.js";function v(c){let t,e="<thead><tr><th>Property</th> <th>Type</th> <th>Default</th> <th>Description</th></tr></thead> <tbody><tr><td>inputId</td> <td><code>string</code></td> <td><code>&quot;&quot;</code></td> <td>id attribute for input element</td></tr> <tr><td>name</td> <td><code>string</code></td> <td><code>&#39;date&#39;</code></td> <td>html attribute for underlying <code>&lt;input&gt;</code> element</td></tr> <tr><td>disabled</td> <td><code>bool</code></td> <td><code>false</code></td> <td>html attribute for underlying <code>&lt;input&gt;</code> element</td></tr> <tr><td>placeholder</td> <td><code>string</code></td> <td><code>null</code></td> <td>html attribute for underlying <code>&lt;input&gt;</code> element</td></tr> <tr><td>required</td> <td><code>bool</code></td> <td><code>false</code></td> <td>html attribute for underlying <code>&lt;input&gt;</code> element</td></tr> <tr><td>value</td> <td><code>string</code></td> <td><code>null</code></td> <td>string representation of selected value</td></tr> <tr><td>initialDate</td> <td><code>Date</code></td> <td><code>null</code></td> <td>initial date object, if you prefer that to <code>value</code></td></tr> <tr><td>isRange</td> <td><code>bool</code></td> <td><code>false</code></td> <td>enables range picker mode</td></tr> <tr><td>startDate</td> <td><code>string|Date</code></td> <td><code>null</code></td> <td>limit minimal selectable date</td></tr> <tr><td>endDate</td> <td><code>string|Date</code></td> <td><code>null</code></td> <td>limit maximal selectable date</td></tr> <tr><td>pickerOnly</td> <td><code>bool</code></td> <td><code>false</code></td> <td>Picker is always visible and input field is then hidden, but still present</td></tr> <tr><td>startView</td> <td><code>number</code></td> <td><code>2</code></td> <td>Which mode should picker at, <code>0</code> - decade, <code>1</code> - year, <code>2</code> - month (default), <code>3</code> - time picker</td></tr> <tr><td>mode</td> <td><code>string</code></td> <td><code>auto</code></td> <td>restrict pickerâ€™s mode. Possible values: <code>auto\\|date\\|datetime\\|time</code>. By default it try to guess the mode from <code>format</code></td></tr> <tr><td>disableDatesFn</td> <td><code>function</code></td> <td><code>null</code></td> <td>Function whether passed date should be disabled or not</td></tr> <tr><td>manualInput</td> <td><code>bool</code></td> <td><code>false</code></td> <td>Whether manual date entry is allowed</td></tr> <tr><td>format</td> <td><code>string</code></td> <td><code>&#39;yyyy-mm-dd&#39;</code></td> <td>Format of entered date/time.</td></tr> <tr><td>formatType</td> <td><code>string</code></td> <td><code>&#39;standard&#39;</code></td> <td>Format type (<code>standard</code> or <code>php</code>)</td></tr> <tr><td>displayFormat</td> <td><code>string</code></td> <td><code>null</code></td> <td>Display format of entered date/time.</td></tr> <tr><td>displayFormatType</td> <td><code>string</code></td> <td><code>null</code></td> <td>Display format type (<code>standard</code> or <code>php</code>)</td></tr> <tr><td>minuteIncrement</td> <td><code>number</code></td> <td><code>1</code></td> <td>number in range <code>1-60</code> to set the increment of minutes choosable</td></tr> <tr><td>weekStart</td> <td><code>number</code></td> <td><code>1</code></td> <td>number in range <code>0-6</code> to select first day of the week. Sunday is <code>0</code></td></tr> <tr><td>inputClasses</td> <td><code>string</code></td> <td><code>&quot;&quot;</code></td> <td>input css class string</td></tr> <tr><td>todayBtnClasses</td> <td><code>string</code></td> <td><code>&#39;sdt-action-btn sdt-today-btn&#39;</code></td> <td>today button css classes</td></tr> <tr><td>clearBtnClasses</td> <td><code>string</code></td> <td><code>&#39;sdt-action-btn sdt-clear-btn&#39;</code></td> <td>clear button css classes</td></tr> <tr><td>todayBtn</td> <td><code>bool</code></td> <td><code>true</code></td> <td>Show today button</td></tr> <tr><td>clearBtn</td> <td><code>bool</code></td> <td><code>true</code></td> <td>Show clear button</td></tr> <tr><td>clearToggle</td> <td><code>bool</code></td> <td><code>true</code></td> <td>Allows to clear selected date when clicking on the same date when in <code>mode=&#39;date&#39;</code> or <code>mode=&#39;auto&#39;</code> resolving to <code>&#39;date&#39;</code></td></tr> <tr><td>autocommit</td> <td><code>bool</code></td> <td><code>true</code></td> <td>Whether date/time selection is automatic or manual</td></tr> <tr><td>i18n</td> <td><code>object</code></td> <td><code>en</code></td> <td>localization object, english is by default</td></tr> <tr><td>validatorAction</td> <td><code>array</code></td> <td><code>null</code></td> <td>Bind validator action for inner <code>&lt;input&gt;</code> element. Designed to be used with <code>svelte-use-form</code>.</td></tr></tbody>";return{c(){t=l("table"),t.innerHTML=e},l(d){t=s(d,"TABLE",{"data-svelte-h":!0}),u(t)!=="svelte-lux6bp"&&(t.innerHTML=e)},m(d,r){m(d,t,r)},p:o,i:o,o,d(d){d&&p(t)}}}class w extends n{constructor(t){super(),i(this,t,null,v,a,{})}}function D(c){let t,e;return t=new w({}),{c(){b(t.$$.fragment)},l(d){f(t.$$.fragment,d)},m(d,r){h(t,d,r),e=!0},p:o,i(d){e||(g(t.$$.fragment,d),e=!0)},o(d){y(t.$$.fragment,d),e=!1},d(d){_(t,d)}}}const $={title:"Properties"};class B extends n{constructor(t){super(),i(this,t,null,D,a,{})}}export{B as default,$ as metadata};
