import{s as H,f as u,a as m,g as p,x as v,c as f,i as s,r as x,d as o}from"./scheduler.6381a9b9.js";import{S as M,i as T}from"./index.cf31950d.js";function y(L){let t,_="Component emits <code>input</code>, <code>change</code> and <code>blur</code> events.",c,n,g="<li><code>input</code> is dispatched on <code>&lt;input&gt;</code> element therefore you can get current value like from every native event:</li> <li><code>change</code> event is using Svelte’s <code>eventDispatcher</code>, therefore triggered event contains <code>detail</code> property</li>",d,l,h="For custom element:",r,i,C="<li><code>input</code> is also triggered on underlying <code>input[value]</code> and it’s value is accessible underas standard input <code>event.target.value</code></li>";return{c(){t=u("p"),t.innerHTML=_,c=m(),n=u("ul"),n.innerHTML=g,d=m(),l=u("p"),l.textContent=h,r=m(),i=u("ul"),i.innerHTML=C},l(e){t=p(e,"P",{"data-svelte-h":!0}),v(t)!=="svelte-x4493h"&&(t.innerHTML=_),c=f(e),n=p(e,"UL",{"data-svelte-h":!0}),v(n)!=="svelte-jok912"&&(n.innerHTML=g),d=f(e),l=p(e,"P",{"data-svelte-h":!0}),v(l)!=="svelte-3drq0w"&&(l.textContent=h),r=f(e),i=p(e,"UL",{"data-svelte-h":!0}),v(i)!=="svelte-6ezm3l"&&(i.innerHTML=C)},m(e,a){s(e,t,a),s(e,c,a),s(e,n,a),s(e,d,a),s(e,l,a),s(e,r,a),s(e,i,a)},p:x,i:x,o:x,d(e){e&&(o(t),o(c),o(n),o(d),o(l),o(r),o(i))}}}const b={title:"Events"};class k extends M{constructor(t){super(),T(this,t,null,y,H,{})}}export{k as default,b as metadata};
