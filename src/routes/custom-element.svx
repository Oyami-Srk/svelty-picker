<script>
  import { onMount } from 'svelte';
  import CustomElement from './_markdown/custom-element.md';

  onMount(() => {
    import('./../lib/utils/custom-element').then(resp => {
      console.log('ðŸ¥³ registering SveltyPicker as <el-picker> element');
      resp.registerElement && resp.registerElement('el-picker');
    }).catch(e => console.log('error', e));
  })
</script>

<h2 class="header">Custom Element</h2>

<p class="my-4">Custom element is defined as extension to native <code class="code">input</code> tag. Custom element
supports all options that can be passed as string (So all except initialDate). The input itself should always be placed
inside relative positioned container.
</p>

<div class="my-4 p-2 bg-red-300 dark:bg-red-500">
  Please not that for cross-browser support (Safari), this <a href="https://github.com/ungap/custom-elements#readme" target="_blank">ungap/custom-element</a> polyfill is required.
</div>

Picker initialized as custom element:
<span>
  <el-picker class="relative" format="dS MM" value="2023-01-23">
    <input type="hidden" name="my-date">
    <input type="text" name="my-date_input" class="border-1 rounded-md border-gray-300 p-1" placeholder="Pick your birthdate">
  </el-picker>
</span>

#### Pure `el-picker` tag
<p>
  <el-picker name="picker" format="dS MM" value="2022-12-23" placeholder="Demo" class="border-1 rounded-md border-gray-300 p-1"></el-picker>
</p>

<CustomElement></CustomElement>

<p class="my-4">
  Custom element supports 2 custom <code class="code">from</code> and <code class="code">to</code> properties, which should
  specify <b class="font-bold">id</b> of different datetime picker for limiting <code class="code">startDate</code> or <code class="code">endDate</code>.
  Check source how it is defined.
</p>

<div class="group">
  <el-picker name="picker1" placeholder="From" to="picker-to"></el-picker>
  <div class="delimiter">&mdash;</div>
  <el-picker name="picker2" placeholder="to" from="picker-from"></el-picker>
</div>

```svelte
<div class="group">
  <el-picker name="picker1" placeholder="From" to="picker-to"></el-picker>
  <div class="delimiter">&mdash;</div>
  <el-picker name="picker2" placeholder="to" from="picker-from"></el-picker>
</div>
```

<style windi:global>
  :global(el-picker) {
    position: relative;
    display: inline;
    min-width: 191px;
  }
  .group {
    position: relative;
    display: inline-flex;
    align-items: center;
    @apply border-1 rounded-md border-gray-300;
    .delimiter {
      @apply border-gray-300 border-l-1 border-r-1 px-2 py-2;
    }
    input {
      @apply px-2 py-2;
      width: 130px;
      &:focus {
        outline: none;
      }
    }
  }
</style>